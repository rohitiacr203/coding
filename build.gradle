buildscript {
    ext {
        springBootVersion = '1.5.6.RELEASE'
    }
    repositories {
        mavenCentral()
	jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5"
	classpath "eu.appsatori:gradle-fatjar-plugin:0.3"
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'maven'
apply plugin: 'base'
apply plugin: 'groovy'
apply plugin: 'java-gradle-plugin'
apply plugin: 'jacoco'
apply plugin: "org.sonarqube"
archivesBaseName = 'assesment'
version = '1.0-SNAPSHOT'

sonarqube {
  properties {
    property "sonar.projectName","QaPipeline Sonar CodeAssesement"
    property "sonar.projectKey", "org.sonarqubeJacocoCodeCoverage"
    property "sonar.reportPath" , "${project.buildDir}/jacoco/test.exec"
  }
}

test {
	ignoreFailures = true
}

repositories {
        mavenCentral()
}

sourceCompatibility = javacompatibility
targetCompatibility = javacompatibility
dependencies {
    compile('org.springframework.boot:spring-boot-starter-web-services')
    compile('org.springframework.boot:spring-boot-starter-amqp')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('io.springfox:springfox-swagger2:2.4.0')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.apache.commons:commons-lang3:3.7')
    compile('io.springfox:springfox-swagger-ui:2.8.0')
    compile('io.springfox:springfox-swagger2:2.8.0')

    runtime('com.h2database:h2')
    compile('org.codehaus.groovy:groovy-all:2.4.10')
    testCompile('junit:junit:4.12')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.mockito:mockito-core:2.18.0')

}
 jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}
test.finalizedBy jacocoTestReport
